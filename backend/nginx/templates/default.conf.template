upstream zen_match_web {
    server web:${GUNICORN_PORT};
}

server {
    return 403;
}

server {
    listen 80;
    listen [::]:80;

    server_name mw.${SITE_URL};

    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 ${WEB_PROTOCOL}://mw.${SITE_URL}$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name mw.${SITE_URL};

    ssl_certificate /etc/nginx/ssl/live/mw.${SITE_URL}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/mw.${SITE_URL}/privkey.pem;

    location /static/ {
        alias /app/static/;
    }


    location /media/ {
        alias /app/media/;
    }

    if ($host !~* ^mw.${SITE_URL}$)
    {
        return 444;
    }

    location /api {
        return 301 $scheme://$http_host/v0$request_uri;
    }

    location / {
        proxy_pass http://zen_match_web;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_connect_timeout ${NGINX_PROXY_CONNECT_TIMEOUT}s;
        proxy_read_timeout ${NGINX_PROXY_READ_TIMEOUT}s;
        proxy_redirect off;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name db.${SITE_URL};

    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 ${WEB_PROTOCOL}://db.${SITE_URL}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name db.${SITE_URL};

    ssl_certificate /etc/nginx/ssl/live/db.${SITE_URL}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/db.${SITE_URL}/privkey.pem;

    if ($host !~* ^db.${SITE_URL}$)
    {
        return 444;
    }

    location / {
        proxy_pass http://adminer:${ADMINER_PORT};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_connect_timeout ${NGINX_PROXY_CONNECT_TIMEOUT}s;
        proxy_read_timeout ${NGINX_PROXY_READ_TIMEOUT}s;
        proxy_redirect off;
        proxy_set_header X-Script-Name /adminer;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name flower.${SITE_URL};

    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 ${WEB_PROTOCOL}://flower.${SITE_URL}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    charset utf-8;

    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/conf.d/.htpasswd1;

    server_name flower.${SITE_URL};

    ssl_certificate /etc/nginx/ssl/live/flower.${SITE_URL}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/flower.${SITE_URL}/privkey.pem;

    location /static {
        alias  /app/flower/static;
    }

    if ($host !~* ^flower.${SITE_URL}$)
    {
        return 444;
    }

    location / {
        proxy_pass http://flower:${FLOWER_PORT};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

